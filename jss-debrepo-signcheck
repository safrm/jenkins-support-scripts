#!/bin/sh
#jss - jenkins support scripts http://safrm.net/projects/jss
#author: Miroslav Safr <miroslav.safr@gmail.com>
#check deb packages signs
#
#exported GPGKEY or first key is used for check
VERSION=NA
VERSION_DATE=NA

while [ $# -gt 0 ]; do
  case "$1" in
    -v|--verbose)
               VERBOSE=1
               ;;
	* )    REPO_DIR=$1;
	       ;;
  esac
  shift
done

#check parameter
if [ -z "$REPO_DIR" ];	then
	REPO_DIR=`pwd`
fi

if [ ! -d "$REPO_DIR" ];	then
	echo "not existing dir $1, exiting.."
	exit 1
fi

#first key if not defined
if [ -z "$GPGKEY" ]; then
	echo "getting first GPGKEY.."
	GPGKEY=`gpg --list-keys |  grep "pub " | awk -F "[ /]" '{print $5}' | head -1`
fi
if [ -z "$GPGKEY" ]; then
	echo "GPGKEY not found, exiting..."
	exit 1
fi

COUNT_OK=0
COUNT_NOK=0
PACKAGES=$(find $REPO_DIR -type f -printf '%p\n' | grep -i -E -Z '\.(deb|changes|dsc)$')
if [ ! -z "$PACKAGES" ]; then
FIFOOK=/tmp/SIGNCHECK_COUNT_OK.$$
FIFONOK=/tmp/SIGNCHECK_COUNT_NOK.$$
trap 'rm -f $FIFOOK' 0
trap 'rm -f $FIFONOK' 0
mkfifo $FIFOOK 2> /dev/null
mkfifo $FIFONOK 2> /dev/null
echo "${PACKAGES}" | \
{ while IFS='\n' read -r PACKAGE ; do
	#echo "$PACKAGE";
	RES=`dpkg-sig -c $PACKAGE | grep $GPGKEY | grep GOODSIG `
	#echo "$RES"
	if [ $? -ne 0 ]; then
		echo "$PACKAGE not signed by $GPGKEY: $RES"
		COUNT_NOK=$(($COUNT_NOK + 1)) 
	else
		COUNT_OK=$(($COUNT_OK + 1)) 
	fi
  done
  echo "$COUNT_OK" > $FIFOOK &
  echo "$COUNT_NOK" > $FIFONOK &
}
#pass the value back to script
if [ -e $FIFO ]; then
	read COUNT_OK < $FIFOOK
	read COUNT_NOK < $FIFONOK
	wait $!
fi
fi
echo "packages signed OK:$COUNT_OK/NOK:$COUNT_NOK"

if [ $COUNT_NOK -ne 0 ]
	exit 2
fi
